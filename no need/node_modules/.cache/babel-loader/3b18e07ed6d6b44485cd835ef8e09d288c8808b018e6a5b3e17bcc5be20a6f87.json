{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000112467\\\\OneDrive - Hexaware Technologies\\\\Book Store\\\\BookStoreSolution\\\\book-store\\\\src\\\\components\\\\Books.js\",\n  _s = $RefreshSig$();\n// // Books.js\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import BookCard from \"./BookCard\"; // Import your BookCard component\n// import './Books.css'; // Import your CSS file for styling\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch book data from your API or data source\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await axios.get(\"https://localhost:7034/api/Book\"); // Replace with your API endpoint\n//         setBooks(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching books:\", error);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   return (\n//     <div className=\"booksContainer\">\n//       <h2>All Books</h2>\n//       <div className=\"booksGrid\">\n//         {books.map(book => (\n//           <BookCard key={book.bookId} book={book} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Books;\n\nimport React, { useState } from 'react';\nimport BookService from './BookService'; // Adjust the path accordingly\nimport BookCard from './BookCard'; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchType, setSearchType] = useState(''); // 'author', 'title', 'genre'\n\n  const handleSearch = async () => {\n    // Use the selected search type to make the appropriate API call\n    let result;\n    if (searchType === 'author') {\n      result = await BookService.getBooksByAuthor(searchTerm);\n    } else if (searchType === 'title') {\n      result = await BookService.getBookByTitle(searchTerm);\n      result = result ? [result] : [];\n    } else if (searchType === 'genre') {\n      result = await BookService.getBooksByGenre(searchTerm);\n    }\n    setBooks(result || []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search term\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchType,\n        onChange: e => setSearchType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"genre\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(BookCard, {\n          book: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, book.bookId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"RgonyPdH3MuzuKaGbF6xgFgZmhw=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useState","BookService","BookCard","jsxDEV","_jsxDEV","Books","_s","books","setBooks","searchTerm","setSearchTerm","searchType","setSearchType","handleSearch","result","getBooksByAuthor","getBookByTitle","getBooksByGenre","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","book","bookId","_c","$RefreshReg$"],"sources":["C:/Users/2000112467/OneDrive - Hexaware Technologies/Book Store/BookStoreSolution/book-store/src/components/Books.js"],"sourcesContent":["// // Books.js\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import BookCard from \"./BookCard\"; // Import your BookCard component\r\n// import './Books.css'; // Import your CSS file for styling\r\n\r\n// const Books = () => {\r\n//   const [books, setBooks] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch book data from your API or data source\r\n//     const fetchBooks = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://localhost:7034/api/Book\"); // Replace with your API endpoint\r\n//         setBooks(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching books:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchBooks();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"booksContainer\">\r\n//       <h2>All Books</h2>\r\n//       <div className=\"booksGrid\">\r\n//         {books.map(book => (\r\n//           <BookCard key={book.bookId} book={book} />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Books;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport BookService from './BookService'; // Adjust the path accordingly\r\nimport BookCard from './BookCard'; // Adjust the path accordingly\r\n\r\nconst Books = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchType, setSearchType] = useState(''); // 'author', 'title', 'genre'\r\n\r\n  const handleSearch = async () => {\r\n    // Use the selected search type to make the appropriate API call\r\n    let result;\r\n    if (searchType === 'author') {\r\n      result = await BookService.getBooksByAuthor(searchTerm);\r\n    } else if (searchType === 'title') {\r\n      result = await BookService.getBookByTitle(searchTerm);\r\n      result = result ? [result] : [];\r\n    } else if (searchType === 'genre') {\r\n      result = await BookService.getBooksByGenre(searchTerm);\r\n    }\r\n\r\n    setBooks(result || []);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Books</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search term\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <select\r\n          value={searchType}\r\n          onChange={(e) => setSearchType(e.target.value)}\r\n        >\r\n          <option value=\"author\">Author</option>\r\n          <option value=\"title\">Title</option>\r\n          <option value=\"genre\">Genre</option>\r\n        </select>\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {books.map((book) => (\r\n          <li key={book.bookId}>\r\n            <BookCard book={book} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}