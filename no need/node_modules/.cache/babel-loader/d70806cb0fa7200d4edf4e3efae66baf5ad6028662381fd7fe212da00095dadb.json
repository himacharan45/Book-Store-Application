{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000112467\\\\OneDrive - Hexaware Technologies\\\\Book Store\\\\BookStoreSolution\\\\book-store\\\\src\\\\components\\\\Books.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BookCard from \"./BookCard\";\nimport './Books.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"title\"); // Default search type\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        let response;\n        if (searchTerm) {\n          // If there is a search term, use the appropriate API endpoint based on the search type\n          if (searchType === \"author\") {\n            response = await axios.get(`https://localhost:7034/api/Book/author/${autho}`);\n          } else if (searchType === \"title\") {\n            response = await axios.get(`https://localhost:7034/api/Book/bytitle/${searchTerm}`);\n          } else if (searchType === \"genre\") {\n            response = await axios.get(`https://localhost:7034/api/Book/bygenre/${searchTerm}`);\n          }\n        } else {\n          // If no search term, fetch all books\n          response = await axios.get(\"https://localhost:7034/api/Book\");\n        }\n        setBooks(response.data);\n      } catch (error) {\n        console.error(\"Error fetching books:\", error);\n      }\n    };\n    fetchBooks();\n  }, [searchTerm, searchType]); // Update the effect when searchTerm or searchType changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booksContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search term\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchType,\n        onChange: e => setSearchType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"genre\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booksGrid\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, book.bookId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"INVMcpSJCCwi1bFUXAg91gsxqI8=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useState","useEffect","axios","BookCard","jsxDEV","_jsxDEV","Books","_s","books","setBooks","searchTerm","setSearchTerm","searchType","setSearchType","fetchBooks","response","get","autho","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","book","bookId","_c","$RefreshReg$"],"sources":["C:/Users/2000112467/OneDrive - Hexaware Technologies/Book Store/BookStoreSolution/book-store/src/components/Books.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BookCard from \"./BookCard\";\r\nimport './Books.css';\r\n\r\nconst Books = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"title\"); // Default search type\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        let response;\r\n\r\n        if (searchTerm) {\r\n          // If there is a search term, use the appropriate API endpoint based on the search type\r\n          if (searchType === \"author\") {\r\n            response = await axios.get(`https://localhost:7034/api/Book/author/${autho}`);\r\n          } else if (searchType === \"title\") {\r\n            response = await axios.get(`https://localhost:7034/api/Book/bytitle/${searchTerm}`);\r\n          } else if (searchType === \"genre\") {\r\n            response = await axios.get(`https://localhost:7034/api/Book/bygenre/${searchTerm}`);\r\n          }\r\n        } else {\r\n          // If no search term, fetch all books\r\n          response = await axios.get(\"https://localhost:7034/api/Book\");\r\n        }\r\n\r\n        setBooks(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching books:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, [searchTerm, searchType]); // Update the effect when searchTerm or searchType changes\r\n\r\n  return (\r\n    <div className=\"booksContainer\">\r\n      <h2>All Books</h2>\r\n\r\n      <div className=\"searchContainer\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search term\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <select\r\n          value={searchType}\r\n          onChange={(e) => setSearchType(e.target.value)}\r\n        >\r\n          <option value=\"title\">Title</option>\r\n          <option value=\"author\">Author</option>\r\n          <option value=\"genre\">Genre</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"booksGrid\">\r\n        {books.map((book) => (\r\n          <BookCard key={book.bookId} book={book} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}