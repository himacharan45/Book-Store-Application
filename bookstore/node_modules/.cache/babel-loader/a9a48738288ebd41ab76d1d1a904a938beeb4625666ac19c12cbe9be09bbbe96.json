{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000112467\\\\OneDrive - Hexaware Technologies\\\\Book Store\\\\BookStoreSolution\\\\bookstore\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const initialFormData = {\n    username: \"\",\n    password: \"\"\n  };\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(initialFormData);\n  const [errors, setErrors] = useState({});\n  const [loginResult, setLoginResult] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setErrors({\n      ...errors,\n      [e.target.name]: \"\"\n    }); // Clear the error when the user starts typing\n  };\n  const checkUserData = () => {\n    const {\n      username,\n      password\n    } = formData;\n    const newErrors = {};\n    if (!username) newErrors.username = \"Username cannot be empty\";\n    if (!password) newErrors.password = \"Password cannot be empty\";\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!username) {\n      newErrors.username = \"Email cannot be empty\";\n    } else if (!emailRegex.test(username)) {\n      newErrors.username = \"Please enter a valid email address\";\n    }\n\n    // Password validation\n    if (!password) {\n      newErrors.password = \"Password cannot be empty\";\n    } else if (password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters long\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const login = async event => {\n    event.preventDefault();\n    if (!checkUserData()) return;\n    try {\n      // Use the appropriate API endpoint for login\n      const response = await axios.post(\"https://localhost:7034/api/User/Login\", formData);\n\n      // Check if the response contains a token\n      if (response.data && response.data.token) {\n        const token = response.data.token;\n        const username = response.data.username;\n        const role = response.data.role;\n\n        // Store the token in local storage\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"role\", role);\n        setLoginResult({\n          success: true\n        });\n        alert(\"Login Successful!\");\n\n        // // Force a page reload upon successful login\n        // window.location.reload();\n        navigate('/Home');\n        window.location.reload();\n      } else {\n        setLoginResult({\n          success: false,\n          message: \"Login failed. Token not found in the response.\"\n        });\n      }\n    } catch (err) {\n      setLoginResult({\n        success: false,\n        message: \"Login failed. Please check your credentials.\"\n      });\n      console.log(err);\n      setFormData(initialFormData);\n    }\n    // } finally {\n    //     setFormData(initialFormData); // Clear the form data after both success and failure\n    // }\n  };\n  const setLoggedIn = value => {\n    // Custom function to update the isLoggedIn state\n    // This function can be defined in the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"loginHeader\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        noValidate: true,\n        children: [Object.entries(formData).map(([field, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.charAt(0).toUpperCase() + field.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.includes(\"password\") ? \"password\" : \"text\",\n            className: \"passwordInput\",\n            name: field,\n            value: value,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), errors[field] && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors[field]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 47\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)), loginResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert ${loginResult.success ? 'alert-success' : 'alert-danger'} mt-3`,\n          children: loginResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-primary\",\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-primary\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \" Sign up here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"Lo9nsPQ6SzNgnryd6HVxrLJGHkY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","initialFormData","username","password","navigate","formData","setFormData","errors","setErrors","loginResult","setLoginResult","handleChange","e","target","name","value","checkUserData","newErrors","emailRegex","test","length","Object","keys","login","event","preventDefault","response","post","data","token","role","localStorage","setItem","success","alert","window","location","reload","message","err","console","log","setLoggedIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","entries","map","field","charAt","toUpperCase","slice","type","includes","onChange","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/2000112467/OneDrive - Hexaware Technologies/Book Store/BookStoreSolution/bookstore/src/components/Login.js"],"sourcesContent":["// Login.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const initialFormData = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [errors, setErrors] = useState({});\r\n    const [loginResult, setLoginResult] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        setErrors({ ...errors, [e.target.name]: \"\" }); // Clear the error when the user starts typing\r\n    };\r\n\r\n    const checkUserData = () => {\r\n        const { username, password } = formData;\r\n        const newErrors = {};\r\n\r\n        if (!username) newErrors.username = \"Username cannot be empty\";\r\n        if (!password) newErrors.password = \"Password cannot be empty\";\r\n        // Email validation\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!username) {\r\n            newErrors.username = \"Email cannot be empty\";\r\n        } else if (!emailRegex.test(username)) {\r\n            newErrors.username = \"Please enter a valid email address\";\r\n        }\r\n\r\n        // Password validation\r\n        if (!password) {\r\n            newErrors.password = \"Password cannot be empty\";\r\n        } else if (password.length < 6) {\r\n            newErrors.password = \"Password must be at least 6 characters long\";\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const login = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!checkUserData()) return;\r\n\r\n        try {\r\n            // Use the appropriate API endpoint for login\r\n            const response = await axios.post(\"https://localhost:7034/api/User/Login\", formData);\r\n\r\n            // Check if the response contains a token\r\n            if (response.data && response.data.token) {\r\n                const token = response.data.token;\r\n                const username = response.data.username;\r\n                const role = response.data.role;\r\n\r\n\r\n                // Store the token in local storage\r\n                localStorage.setItem(\"token\", token);\r\n                localStorage.setItem(\"username\", username);\r\n                localStorage.setItem(\"role\", role);\r\n                setLoginResult({ success: true });\r\n                alert(\"Login Successful!\");\r\n\r\n                // // Force a page reload upon successful login\r\n                // window.location.reload();\r\n                navigate('/Home');\r\n                window.location.reload();\r\n            } else {\r\n                setLoginResult({ success: false, message: \"Login failed. Token not found in the response.\" });\r\n            }\r\n        } catch (err) {\r\n            setLoginResult({ success: false, message: \"Login failed. Please check your credentials.\" });\r\n            console.log(err);\r\n            setFormData(initialFormData);\r\n        }\r\n        // } finally {\r\n        //     setFormData(initialFormData); // Clear the form data after both success and failure\r\n        // }\r\n    };\r\n    const setLoggedIn = (value) => {\r\n        // Custom function to update the isLoggedIn state\r\n        // This function can be defined in the parent component\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <div className=\"loginBox\">\r\n                <h2 className=\"loginHeader\">Login</h2>\r\n                <form className=\"loginForm\" noValidate>\r\n                    {Object.entries(formData).map(([field, value]) => (\r\n                        <div className=\"form-group\" key={field}>\r\n                            <label>\r\n                                {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                            </label>\r\n                            <input\r\n                                type={field.includes(\"password\") ? \"password\" : \"text\"}\r\n                                className=\"passwordInput\"\r\n                                name={field}\r\n                                value={value}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors[field] && <span className=\"error\">{errors[field]}</span>}\r\n                        </div>\r\n                    ))}\r\n\r\n                    {loginResult && (\r\n                        <div className={`alert ${loginResult.success ? 'alert-success' : 'alert-danger'} mt-3`}>\r\n                            {loginResult.message}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mt-3\">\r\n                        <button className=\"button button-primary\" onClick={login}>\r\n                            Login\r\n                        </button>\r\n                        <button className=\"button button-primary\">Reset</button>\r\n                    </div>\r\n\r\n                    <div className=\"signup-link\">\r\n                        <p>\r\n                            Don't have an account?\r\n                            <Link to=\"/signup\"> Sign up here</Link>.\r\n                        </p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}